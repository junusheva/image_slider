{"version":3,"sources":["components/Dots/Dot.js","components/Dots/Dots.js","components/Slide/Slide.js","components/Arrows/LeftArrow.js","components/Arrows/RightArrow.js","components/Slider/imagesArray.js","components/Slider/Slider.js","App.js","serviceWorker.js","index.js"],"names":["Dot","_ref","clicked","handleDotClick","dotIndex","dotClass","react_default","a","createElement","className","onClick","Dots","images","activeImageIndex","map","image","Dots_Dot","key","Slide","props","styles","backgroundImage","concat","backgroundSize","backgroundRepeat","backgroundPosition","style","LeftArrow","goToPrevSlide","RightArrow","goToNextSlide","imageUrls","Slider","state","currentIndex","translateValue","autoplayOn","window","setInterval","_this","console","log","setState","length","slideWidth","prevState","index","document","querySelector","clientWidth","transform","this","transition","components_Slide_Slide","Arrows_LeftArrow","Arrows_RightArrow","components_Dots_Dots","Component","App","components_Slider_Slider","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.364285cc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Dot = ({clicked, handleDotClick, dotIndex}) => {\n    const dotClass = clicked ? \"clickedDot\" : \"inactiveDot\";\n    return (\n        <div\n            className={dotClass}\n            onClick={() => handleDotClick(dotIndex)}\n        >\n\n        </div>\n    );\n};\n\nexport default Dot;","import React from 'react';\nimport Dot from \"./Dot\";\nimport './Dots.css';\n\nconst Dots = ({images, activeImageIndex, handleDotClick}) => (\n    <div className={\"dotsWrapper\"}>\n        {\n            images.map((image, dotIndex) => (\n                <Dot\n                    key={dotIndex}\n                    clicked={activeImageIndex === dotIndex}\n                    handleDotClick={handleDotClick}\n                    activeImageIndex={activeImageIndex}\n                    dotIndex={dotIndex}\n                />\n            ))\n        }\n    </div>\n);\n\nexport default Dots;","import React from 'react';\nimport \"./Slide.css\";\n\nconst Slide = props => {\n    const styles = {\n        backgroundImage: `url(${props.image})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: '50% 60%'\n    };\n    return (\n        <div\n            className=\"slide\"\n            style={styles}\n        >\n\n        </div>\n    );\n};\n\nexport default Slide;","import React from 'react';\nimport './Arrows.css';\n\nconst LeftArrow = props => (\n    <div className=\"leftArrow\" onClick={props.goToPrevSlide}>\n        <i className=\"fas fa-angle-left\"/>\n    </div>\n\n);\n\nexport default LeftArrow;","import React from 'react';\nimport './Arrows.css';\n\nconst RightArrow = props => (\n    <div className=\"rightArrow\" onClick={props.goToNextSlide}>\n        <i className=\"fas fa-angle-right\"/>\n    </div>\n\n);\n\nexport default RightArrow;","const imageUrls = [\n    //just some images from google\n    \"https://www.digitalcare.org/wp-content/uploads/2016/11/Free-Desktop-Wallpaper-feature.jpg\",\n    \"https://cdn.shopify.com/s/files/1/0901/0816/products/Beautifully_Stranded_Desktop_1_2048x.JPG?v=1500905812\",\n    \"https://cdn.wonderfulengineering.com/wp-content/uploads/2016/01/Desktop-Wallpaper-26.jpg\",\n    \"https://cdn.cultofmac.com/wp-content/uploads/2019/01/A30A73E0-4AC8-412B-9803-557D2310BDDE.1af271bf674941aabb417ca24b32d194-780x566.jpeg\",\n    \"https://static1.squarespace.com/static/552b1764e4b03cff36ace4b2/5a46c25424a694278eb57e34/5a46c4e2c83025f8444ca9b8/1514682496976/2017_September17.jpg\",\n    \"https://cdn.newsapi.com.au/image/v1/06e4a0f5221e045e88ba3c707e1e7949\"\n];\n\nexport default imageUrls;","import React, {Component} from 'react';\n\nimport Dots from \"../Dots/Dots\";\nimport Slide from \"../Slide/Slide\";\nimport LeftArrow from \"../Arrows/LeftArrow\";\nimport RightArrow from \"../Arrows/RightArrow\";\n\nimport './Slider.css';\n\n//An array of image urls\nimport imageUrls from \"./imagesArray.js\";\n\nclass Slider extends Component {\n\n    state = {\n        images: imageUrls,\n        currentIndex: 0,\n        translateValue: 0,\n        autoplayOn: window.setInterval(() => {\n            this.goToNextSlide()\n        }, 5000)\n    };\n\n    goToPrevSlide = () => {\n        console.log(this.state.images);\n        if(this.state.currentIndex === 0) {\n            return this.setState({\n                currentIndex: this.state.images.length - 1,\n                translateValue:  -(this.slideWidth())* (this.state.images.length - 1)\n            })\n        }\n\n        this.setState(prevState => ({\n            currentIndex: prevState.currentIndex - 1,\n            translateValue: prevState.translateValue + (this.slideWidth())\n        }));\n    };\n\n    goToNextSlide = () => {\n        console.log(this.state.translateValue, this.state.currentIndex);\n        if(this.state.currentIndex === this.state.images.length - 1) {\n            return this.setState({\n                currentIndex: 0,\n                translateValue: 0\n            })\n        }\n\n        this.setState(prevState => ({\n            currentIndex: prevState.currentIndex + 1,\n            translateValue: prevState.translateValue + -(this.slideWidth())\n        }));\n\n    };\n\n    handleDotClick = index => {\n        console.log(\"handleDotClick\");\n        return this.setState({\n            currentIndex: index,\n            translateValue:  -(this.slideWidth())* (index)\n        })\n    };\n\n    slideWidth = () => {\n        return document.querySelector('.slide').clientWidth\n    };\n\n    render() {\n        return (\n            <div className=\"slider\">\n                <div\n                    className=\"imagesWrapper\"\n                    style={{\n                        transform: `translateX(${this.state.translateValue}px)`,\n                        transition: 'transform ease-out 0.45s',\n                    }}\n                >\n                    {\n                        this.state.images.map((image, index) => (\n                            <Slide key={index} image={image}/>\n                        ))\n                    }\n                </div>\n\n                <LeftArrow goToPrevSlide={this.goToPrevSlide}/>\n                <RightArrow goToNextSlide={this.goToNextSlide}/>\n                <Dots\n                    images={this.state.images}\n                    activeImageIndex={this.state.currentIndex}\n                    handleDotClick={this.handleDotClick}\n                />\n            </div>\n        );\n    }\n}\n\n\n\nexport default Slider;\n","import React, {Component} from 'react';\nimport './App.css';\nimport Slider from \"./components/Slider/Slider\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Slider/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}